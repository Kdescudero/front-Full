import axios from "axios";
import { endpoint } from "../endpoints"

export const createProduct = async (produc, dispatch) => {
  const url = endpoint.products.createProducts;

  try {
    const { status } = await axios.post(url, produc);
    if (status) {
      dispatch({ type: "addProduct", data: produc });
    }
  } catch (error) {
    throw new Error(error);
  }
};

export const LisProducts = async (setData, setLoading) => {
  const url = endpoint.products.listProducts;
  setLoading(true);
  try {
    const { status, data } = await axios.get(url);

    if (status === 200) {
      setData(data)
      setLoading(false);
    }
  } catch (error) {
    throw new Error(error);
  }
};

export const DeleteProducts = async (id, dispatch, setData, data) => {
  const url = `${endpoint.products.deleteProducts}${id}`;

  try {
    const { status } = await axios.delete(url);
    if (status) {
      setData(data.filter((item) => item.id !== id))
      dispatch({
        type: "deleteProduct",
        data: id,
      });
    }
  } catch (error) {
    throw new Error(error);
  }
};

export const UpdateProducts = async ({ id, setData, data, newData }) => {
  const url = `${endpoint.products.updateProducts}${id}`;

  try {
    const { status } = await axios.put(url);
    if (status) {
      setData(data.map((item) => (item.id === id ? newData : item)));
    }
  } catch (error) {
    throw new Error(error);
  }
};

export const FindOneProducts = async (id, setProduct) => {
  const url = `${endpoint.products.deleteProducts}${id}`;

  try {
    const { status, data } = await axios.get(url);
    if (status) {
      setProduct(data)
    }
  } catch (error) {
    throw new Error(error);
  }
}
